buildscript {
    repositories {
        maven {
            url 'https://dl.bintray.com/palantir/releases/'
        }
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
}

plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '1.2.3'
    id 'me.champeau.gradle.jmh' version '0.3.1'
    id 'net.ltgt.apt' version '0.9'
}

apply plugin: 'com.palantir.git-version'
apply plugin: 'me.champeau.gradle.jmh'
apply from: "${rootDir}/gradle/java.gradle"

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

jmhJar {
    manifest {
        attributes 'Main-Class': 'com.palantir.tritium.microbenchmarks.ProxyBenchmark'
    }
    append('META-INF/BenchmarkList')
    append('META-INF/CompilerHints')
}

dependencies {
    compile project(":tritium-api")
    compile project(":tritium-brave")
    compile project(":tritium-core")
    compile project(":tritium-lib")
    compile project(":tritium-metrics")
    compile project(":tritium-slf4j")
    compile project(":tritium-tracing")

    compile "com.google.code.findbugs:annotations:${findbugsVersion}"
    compile "com.google.guava:guava:${guavaVersion}"
    compile "io.dropwizard.metrics:metrics-core:${dropwizardMetricsVersion}"
    compile "org.mpierce.metrics.reservoir:hdrhistogram-metrics-reservoir:${hdrHistogramMetricsReservoirVersion}"
    compile "org.slf4j:slf4j-api:${slf4jVersion}"

    processor "org.immutables:value:${immutablesVersion}"

    testCompile project(path: ":tritium-core", configuration: "testArtifacts")
    testCompile ("com.google.guava:guava-testlib:${guavaVersion}") {
        exclude group: "com.google.truth"
        exclude group: "com.google.guava", module: "guava"
    }
    testCompile "com.google.truth:truth:${truthVersion}"
    testCompile "io.zipkin.brave:brave-spancollector-http:${braveVersion}"
    testCompile "io.zipkin.java:zipkin-junit:${zipkinJunitVersion}"
    testCompile "junit:junit:${junitVersion}"
    testCompile "org.hamcrest:hamcrest-all:${hamcrestVersion}"
    testCompile "org.mockito:mockito-all:${mockitoVersion}"
    testCompile "org.slf4j:slf4j-simple:${slf4jVersion}"

    jmh "io.zipkin.brave:brave-spancollector-http:${braveVersion}"
    jmh "org.openjdk.jmh:jmh-core:${jmhVersion}"
    jmh "org.slf4j:slf4j-simple:${slf4jVersion}"
    jmh "ch.qos.logback:logback-classic:${logbackClassicVersion}"
    apt "org.openjdk.jmh:jmh-generator-annprocess:${jmh.jmhVersion}"

}
