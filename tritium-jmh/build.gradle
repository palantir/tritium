apply plugin: 'me.champeau.jmh'

jmh {
    // Use profilers to collect additional data. Supported profilers:
    // [cl, comp, gc, stack, perf, perfnorm, perfasm, xperf, xperfasm, hs_cl, hs_comp, hs_gc, hs_rt, hs_thr]
    profilers = ['gc']
}

tasks.jmhCompileGeneratedClasses {
    options.annotationProcessorPath = configurations.errorprone
    options.errorprone.enabled = true
}

dependencies {

    jmhAnnotationProcessor 'org.openjdk.jmh:jmh-generator-annprocess'
    api 'io.dropwizard.metrics:metrics-core'

    jmhImplementation project(':tritium-api')
    jmhImplementation project(':tritium-core')
    jmhImplementation project(':tritium-lib')
    jmhImplementation project(':tritium-metrics')
    jmhImplementation project(':tritium-registry')
    jmhImplementation project(':tritium-slf4j')
    jmhImplementation project(':tritium-test')
    jmhImplementation project(':tritium-tracing')
    jmhImplementation 'com.google.code.findbugs:jsr305'
    jmhImplementation 'com.google.guava:guava'
    jmhImplementation 'com.palantir.safe-logging:preconditions'
    jmhImplementation 'com.palantir.safe-logging:safe-logging'
    jmhImplementation 'com.palantir.tracing:tracing'
    jmhImplementation 'com.palantir.tracing:tracing-api'
    jmhImplementation 'io.dropwizard.metrics:metrics-core'
    jmhImplementation 'org.slf4j:slf4j-api'
}
